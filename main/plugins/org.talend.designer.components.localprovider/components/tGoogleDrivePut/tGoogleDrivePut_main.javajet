<%@ jet 
imports="
    org.talend.core.model.process.INode 
    org.talend.core.model.process.IConnection
    org.talend.core.model.process.IConnectionCategory 
    org.talend.core.model.process.ElementParameterParser 
    org.talend.designer.codegen.config.CodeGeneratorArgument
    org.talend.core.model.metadata.IMetadataTable 
    org.talend.core.model.metadata.IMetadataColumn
    org.talend.core.model.metadata.types.JavaTypesManager
    org.talend.core.model.metadata.types.JavaType
    java.util.List
" 
%>
<%
		CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
		INode node = (INode)codeGenArgument.getArgument();
		String cid = node.getUniqueName();
		
		String connection = ElementParameterParser.getValue(node,"__CONNECTION__");
		String connectionKey = "\"conn_" + connection+"\"";
		
		String parentId = ElementParameterParser.getValue(node, "__PARENT_ID__");
		String filePath = ElementParameterParser.getValue(node, "__FILE_PATH__");
		
		boolean dieOnError = "true".equals(ElementParameterParser.getValue(node, "__DIE_ON_ERROR__"));
		
		String dataInputConnection = null;
        String dataOutputConnection = null;
        
        List< ? extends IConnection> inputConnections = node.getIncomingConnections();
	    for(IConnection conn : inputConnections) {
	        if(conn.getLineStyle().hasConnectionCategory(IConnectionCategory.DATA)) {
	        	dataInputConnection = conn.getName();
	        	break;
	        } // if(conn) end
	    } // for(conns) end
	    
	    
		List< ? extends IConnection> outputConnections = node.getOutgoingSortedConnections();
	    for(IConnection conn : outputConnections) {
	        if(conn.getLineStyle().hasConnectionCategory(IConnectionCategory.DATA)) {
	        	dataOutputConnection = conn.getName();
	        	break;
	        } // if(conn) end
	    } // for(conns) end
%>
<%if(dataInputConnection != null)
{%>
	String <%=cid%>_fileName = <%=dataInputConnection%>.fileName;
	Object <%=cid%>_content = <%=dataInputConnection%>.content;
	java.io.InputStream <%=cid%>_InputStream = null;
	try
	{
		if(<%=cid%>_fileName == null || "".equals(<%=cid%>_fileName.trim())){
			throw new Exception("The Uploaded Box file name can't be null");
		}
	
		if(<%=cid%>_content == null){
			throw new Exception("The Uploaded Box file Content can't be null");
		}
		
		
		if(<%=cid%>_content instanceof byte[]){
			<%=cid%>_InputStream = new java.io.ByteArrayInputStream((byte[])<%=cid%>_content);
		}else if(<%=cid%>_content instanceof java.io.InputStream){
			<%=cid%>_InputStream = (java.io.InputStream)<%=cid%>_content;
		}else{
			<%=cid%>_InputStream = new java.io.ByteArrayInputStream(<%=cid%>_content.toString().getBytes());
		}
		com.box.restclientv2.requestsbase.BoxDefaultRequestObject <%=cid%>_requestObject = new com.box.restclientv2.requestsbase.BoxDefaultRequestObject();
	
	
		<%=cid%>_boxFolder = searchFolder(<%=cid%>_client, <%=cid%>_remotePath, <%=cid%>_remoteName);
		if (<%=cid%>_boxFolder == null)
			throw new Exception("No destination folder found under path " + <%=cid%>_remotePath);
		com.box.restclientv2.requestsbase.BoxFileUploadRequestObject <%=cid%>_fileUploadObj = com.box.restclientv2.requestsbase.BoxFileUploadRequestObject.uploadFileRequestObject(<%=cid%>_boxFolder.getId(), <%=cid%>_fileName, <%=cid%>_InputStream);
		<%=cid%>_boxFile = <%=cid%>_client.getFilesManager().uploadFile(<%=cid%>_fileUploadObj);
		<%if(dataOutputConnection != null){%>
		<%=dataOutputConnection%>.fileName = <%=cid%>_fileName;
		<%=dataOutputConnection%>.content = <%=cid%>_content;
	<%}%>
	}
	catch (java.lang.Exception e)
	{
<%
		if(dieOnError) {
%>
			throw e;
<%
		} else {
%>
			System.err.println(e);
<%
		}
%>
	}
	finally {
		if (<%=cid%>_InputStream != null)
			<%=cid%>_InputStream.close();
	}
<%
} else {
%>	
	java.io.InputStream <%=cid%>_InputStream = null;
	try
	{
		if(<%=cid%>_filePath == null || "".equals(<%=cid%>_filePath.trim()))
		{
			throw new Exception("The Uploaded Box file path can't be null");
		}
		java.io.File <%=cid%>_fileToUpload = new java.io.File(<%=cid%>_filePath);
		if(!<%=cid%>_fileToUpload.exists())
		{
			throw new Exception("The Uploaded Box file doesn't exist");
		}
		if(<%=cid%>_fileToUpload.isDirectory())
		{
			throw new Exception("The specified path is a directory (file expected)");
		}
		<%=cid%>_InputStream = new java.io.FileInputStream(<%=cid%>_fileToUpload);
		<%=cid%>_boxFolder = searchFolder(<%=cid%>_client, <%=cid%>_remotePath, <%=cid%>_remoteName);
		if (<%=cid%>_boxFolder == null)
			throw new Exception("No destination folder found under path " + <%=cid%>_remotePath);
		com.box.restclientv2.requestsbase.BoxFileUploadRequestObject <%=cid%>_fileUploadObj = com.box.restclientv2.requestsbase.BoxFileUploadRequestObject.uploadFileRequestObject(<%=cid%>_boxFolder.getId(), <%=cid%>_fileToUpload.getName(), <%=cid%>_InputStream);
		<%=cid%>_boxFile = <%=cid%>_client.getFilesManager().uploadFile(<%=cid%>_fileUploadObj);
		<%if(dataOutputConnection != null){%>
		<%=dataOutputConnection%>.fileName = <%=cid%>_fileToUpload.getName();
		<%=dataOutputConnection%>.content = <%=cid%>_InputStream;
	<%}%>
	}
	catch (java.lang.Exception e)
	{
<%
		if(dieOnError) {
%>
			throw e;
<%
		} else {
%>
			System.err.println(e);
<%
		}
%>
	}
	finally {
	<%if(dataOutputConnection != null){%>
		if (<%=cid%>_InputStream != null)
		{
			<%=cid%>_InputStream.close();
		}
	<%}%>
	}
<%
}
%>
